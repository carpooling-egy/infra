### This file is used to override the default docker-compose file for local development
version: '3.8'

services:

  apisix:
    image: apache/apisix:latest
    container_name: apisix
    restart: always
    environment:
      APISIX_STAND_ALONE: "true"  
      APISIX_CONFIG_PATH: "/usr/local/apisix/conf/apisix.yaml"
      APISIX_LOG_LEVEL: debug
    volumes: 
      # Mount the local APISIX configuration file to make local development easier
      - ../api-gateway/apisix.yaml:/usr/local/apisix/conf/apisix.yaml
    ports:
      - "9080:9080"  # APISIX HTTP Proxy
      - "9443:9443"  # APISIX HTTPS Proxy, not currently enabled
      - "9180:9180"  # APISIX Admin API helps in debugging
    networks:
      - shared_network

  auth-service:
    build:
      context: ../authentication
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8003:8003"
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/firebase-service-account.json
    volumes:
      - ${LOCAL_FIREBASE_JSON_PATH}:/app/firebase-service-account.json
    networks:
      - shared_network

  profile-service:
    build:
      context: ../profile
      dockerfile: Dockerfile
    container_name: profile-service
    ports:
      - "8080:8080"
    environment:
      - PROFILE_DB_USER=${PROFILE_DB_USER}
      - PROFILE_DB_PASSWORD=${PROFILE_DB_PASSWORD}
      - PROFILE_DB_URL=jdbc:mysql://mysql:3306/profileDB?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    depends_on:
      - mysql
    networks:
      - shared_network

  matching-service:
    build:
      context: ../matching_engine
      dockerfile: Dockerfile
    container_name: matching-service
    restart: unless-stopped
    environment:
      - MATCHER_INTERVAL=15m
    volumes:
      - ride-matcher-logs:/app/logs
    healthcheck:
      test: [ "CMD", "ps", "aux", "|", "grep", "ride-matcher", "||", "exit", "1" ]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
    networks:
      - shared_network

  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=profileDB 
      - MYSQL_USER=${PROFILE_DB_USER}
      - MYSQL_PASSWORD=${PROFILE_DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - shared_network

  request-management-service:
    build:
      context: ../request-management-service
      dockerfile: Dockerfile
    container_name: request-management-service
    ports:
      - "8081:8080"        # adjust host:container ports as needed
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://mysql:5432/profileDB?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=${PROFILE_DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${PROFILE_DB_PASSWORD}
      - TRIP_MINLEADTIMEMINUTES=30
      - TRIP_MAXUPCOMINGTRIPS=30
      - TRIP_MAXTRIPSPERDAY=5
      - TRIP_MAXTRIPSTODAY=5
      - ROUTE_SERVICE_URL=http://valhalla_gis-ops:8002/route
      - GENDER_SERVICE_URL_TEMPLATE=https://profile-service:8080/api/profiles/gender/{userId}
      - MATCHING_CONSUMER_POLL_DELAY_MS=60000
      - NATS_RECONNECT_WAIT_SECONDS=10
    depends_on:
      - mysql
      - profile-service
    networks:
      - shared_network

networks:
  shared_network:
    driver: bridge

volumes:
  ride-matcher-logs:
    driver: local
